name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

env:
  DU: 'dofer123'
  IP: 'pok'
  II: 'imagen'

jobs:
  release:
    if: ${{ !startsWith(github.head_ref, 'release-please') }}
    runs-on: ubuntu-latest
    outputs:
      pok--release_created: ${{ steps.release-please.outputs.pok--release_created}}
      pok-version: '${{ steps.release-please.outputs.pok--major }}.${{ steps.release-please.outputs.pok--minor }}.${{ steps.release-please.outputs.pok--patch }}'
      imagen--release_created: ${{ steps.release-please.outputs.imagen--release_created}}
      imagen-version: '${{ steps.release-please.outputs.imagen--major }}.${{ steps.release-please.outputs.imagen--minor }}.${{ steps.release-please.outputs.imagen--patch }}'
    steps:
      - name: Create a semantic release based on new commits
        id: release-please
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.POK_PAT }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  build:
    runs-on: ${{ matrix.host }}
    needs: release
    strategy:
      matrix:
        include:
          - host: ubuntu-latest
            platform: linux/amd64
            target: x86_64
          - host: self-hosted
            platform: linux/arm64/v8
            target: aarch64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DU }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and export Pok
        if: ${{ needs.release.outputs.pok--release_created }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ env.IP }}
          platforms: ${{ matrix.platform }}
          outputs: type=image,name=${{ env.DU }}/${{ env.IP }},push-by-digest=true
          cache-from: type=registry,ref=${{ env.DU }}/${{ env.IP }}:buildcache-${{ matrix.target }}
          cache-to: type=registry,ref=${{ env.DU }}/${{ env.IP }}:buildcache-${{ matrix.target }},mode=max

      - name: Build and export Imagen
        if: ${{ needs.release.outputs.imagen--release_created }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ env.II }}
          platforms: ${{ matrix.platform }}
          outputs: type=image,name=${{ env.DU }}/${{ env.II }},push-by-digest=true
          cache-from: type=registry,ref=${{ env.DU }}/${{ env.II }}:buildcache-${{ matrix.target }}
          cache-to: type=registry,ref=${{ env.DU }}/${{ env.II }}:buildcache-${{ matrix.target }},mode=max
          build-args: |
            TARGET=${{ matrix.target }}

  merge-and-push:
    needs: [release, build]
    runs-on: ubuntu-latest
    if: ${{ needs.release.outputs.pok--release_created || needs.release.outputs.imagen--release_created }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DU }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push manifest for Pok
        if: ${{ needs.release.outputs.pok--release_created }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ env.IP }}
          platforms: linux/amd64,linux/arm64/v8
          tags: |
            ${{ env.DU }}/${{ env.IP }}:${{ needs.release.outputs.pok-version }}
            ${{ env.DU }}/${{ env.IP }}:latest
          push: true

      - name: Create and push manifest for Imagen
        if: ${{ needs.release.outputs.imagen--release_created }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ env.II }}
          platforms: linux/amd64,linux/arm64/v8
          tags: |
            ${{ env.DU }}/${{ env.II }}:${{ needs.release.outputs.imagen-version }}
            ${{ env.DU }}/${{ env.II }}:latest
          push: true

  call-deploy-pok:
    if: ${{ needs.release.outputs.pok--release_created }}
    needs:
      - release
      - build
      - merge-and-push
    uses: ./.github/workflows/deploy_pok.yml
    secrets: inherit

  call-deploy-imagen:
    if: ${{ needs.release.outputs.imagen--release_created }}
    needs:
      - release
      - build
      - merge-and-push
    uses: ./.github/workflows/deploy_imagen.yml
    secrets: inherit
