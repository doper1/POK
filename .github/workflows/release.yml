name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

env:
  DU: 'dofer123'
  IP: 'pok'
  II: 'imagen'

jobs:
  release:
    if: ${{ !startsWith(github.head_ref, 'release-please') }}
    runs-on: ubuntu-latest
    outputs:
      pok--release_created: ${{ steps.release-please.outputs.pok--release_created}}
      pok-version: '${{ steps.release-please.outputs.pok--major }}.${{ steps.release-please.outputs.pok--minor }}.${{ steps.release-please.outputs.pok--patch }}'
      imagen--release_created: ${{ steps.release-please.outputs.imagen--release_created}}
      imagen-version: '${{ steps.release-please.outputs.imagen--major }}.${{ steps.release-please.outputs.imagen--minor }}.${{ steps.release-please.outputs.imagen--patch }}'
    steps:
      - name: Create a semantic release based on new commits
        id: release-please
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.POK_PAT }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  docker_build:
    if: ${{ !startsWith(github.head_ref, 'release-please') }}
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
          - os: ubuntu-22.04-arm
            arch: arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DU }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Pok
        if: ${{ needs.release.outputs.pok--release_created }}
        run: |
          docker build -t ${{ env.DU }}/${{ env.IP }}:${{ needs.release.outputs.pok-version }} ./pok
          docker build -t ${{ env.DU }}/${{ env.IP }}:latest ./pok

          docker push ${{ env.DU }}/${{ env.IP }}:${{ needs.release.outputs.pok-version }}
          docker push ${{ env.DU }}/${{ env.IP }}:latest

      - name: Build and push Imagen
        if: ${{ needs.release.outputs.imagen--release_created }}
        run: |
          docker build -t ${{ env.DU }}/${{ env.II }}:${{ needs.release.outputs.imagen-version }} ./imagen
          docker build -t ${{ env.DU }}/${{ env.II }}:latest ./imagen

          docker push ${{ env.DU }}/${{ env.II }}:${{ needs.release.outputs.imagen-version }}
          docker push ${{ env.DU }}/${{ env.II }}:latest

  docker_manifest:
    needs:
      - docker_build
      - release
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DU }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push manifest Pok
        if: ${{ needs.release.outputs.pok--release_created }}
        run: |
          docker manifest create ${{ env.DU }}/${{ env.IP }}:${{ needs.release.outputs.pok-version }} ${{ env.DU }}/${{ env.IP }}:${{ needs.release.outputs.pok-version }}-amd64 ${{ env.DU }}/${{ env.IP }}:${{ needs.release.outputs.pok-version }}-arm64
          docker manifest create ${{ env.DU }}/${{ env.IP }}:latest ${{ env.DU }}/${{ env.IP }}:latest-amd64 ${{ env.DU }}/${{ env.IP }}:latest-arm64

          docker manifest annotate ${{ env.DU }}/${{ env.IP }}:${{ needs.release.outputs.pok-version }} ${{ env.DU }}/${{ env.IP }}:${{ needs.release.outputs.pok-version }}-amd64 --os linux --arch amd64
          docker manifest annotate ${{ env.DU }}/${{ env.IP }}:${{ needs.release.outputs.pok-version }} ${{ env.DU }}/${{ env.IP }}:${{ needs.release.outputs.pok-version }}-arm64 --os linux --arch arm64
          docker manifest annotate ${{ env.DU }}/${{ env.IP }}:latest ${{ env.DU }}/${{ env.IP }}:latest-amd64 --os linux --arch amd64
          docker manifest annotate ${{ env.DU }}/${{ env.IP }}:latest ${{ env.DU }}/${{ env.IP }}:latest-arm64 --os linux --arch arm64

          docker manifest push ${{ env.DU }}/${{ env.IP }}:${{ needs.release.outputs.pok-version }}
          docker manifest push ${{ env.DU }}/${{ env.IP }}:latest

      - name: Create and push manifest Imagen
        if: ${{ needs.release.outputs.imagen--release_created }}
        run: |
          docker manifest create ${{ env.DU }}/${{ env.II }}:${{ needs.release.outputs.imagen-version }} ${{ env.DU }}/${{ env.II }}:${{ needs.release.outputs.imagen-version }}-amd64 ${{ env.DU }}/${{ env.II }}:${{ needs.release.outputs.imagen-version }}-arm64
          docker manifest create ${{ env.DU }}/${{ env.II }}:latest ${{ env.DU }}/${{ env.II }}:latest-amd64 ${{ env.DU }}/${{ env.II }}:latest-arm64

          docker manifest annotate ${{ env.DU }}/${{ env.II }}:${{ needs.release.outputs.imagen-version }} ${{ env.DU }}/${{ env.II }}:${{ needs.release.outputs.imagen-version }}-amd64 --os linux --arch amd64
          docker manifest annotate ${{ env.DU }}/${{ env.II }}:${{ needs.release.outputs.imagen-version }} ${{ env.DU }}/${{ env.II }}:${{ needs.release.outputs.imagen-version }}-arm64 --os linux --arch arm64
          docker manifest annotate ${{ env.DU }}/${{ env.II }}:latest ${{ env.DU }}/${{ env.II }}:latest-amd64 --os linux --arch amd64
          docker manifest annotate ${{ env.DU }}/${{ env.II }}:latest ${{ env.DU }}/${{ env.II }}:latest-arm64 --os linux --arch arm64

          docker manifest push ${{ env.DU }}/${{ env.II }}:${{ needs.release.outputs.imagen-version }}
          docker manifest push ${{ env.DU }}/${{ env.II }}:latest

  call-deploy-pok:
    if: ${{ needs.release.outputs.pok--release_created }}
    needs:
      - release
      - docker_build
      - docker_manifest

    uses: ./.github/workflows/deploy_pok.yml
    secrets: inherit

  call-deploy-imagen:
    if: ${{ needs.release.outputs.imagen--release_created }}
    needs:
      - release
      - docker_build
      - docker_manifest

    uses: ./.github/workflows/deploy_imagen.yml
    secrets: inherit
