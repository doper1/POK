name: Test imagen

on:
  pull_request:
    branches:
      - main
    paths:
      - 'imagen/**'

env:
  DOCKER_USERNAME: 'dofer123'
  IMAGE_NAME: 'imagen'

jobs:
  unit-tests:
    if: ${{ !startsWith(github.head_ref, 'release-please') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: set environment variables
        run: |
          echo POSTGRES_HOST=localhost > .env
          echo POSTGRES_DB="${{ secrets.POSTGRES_DB }}" >> .env
          echo POSTGRES_USER="${{ secrets.POSTGRES_USER }}" >> .env
          echo POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" >> .env
          cp .env ./imagen/.env

      - name: start db
        run: docker compose up db -d

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run tests
        run: |
          cd imagen
          cargo test

  build-test:
    runs-on: ${{ matrix.host }}
    strategy:
      matrix:
        include:
          - host: ubuntu-latest
            platform: linux/amd64
            target: x86_64
          - host: self-hosted
            platform: linux/arm64/v8
            target: aarch64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker multi-platform build test
        uses: docker/build-push-action@v6
        with:
          context: ./imagen
          platforms: ${{ matrix.platform }}
          push: false
          tags: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:test
          cache-from: type=gha,scope=imagen-${{ matrix.target }}
          cache-to: type=gha,scope=imagen-${{ matrix.target }},mode=max
          build-args: |
            TARGET=${{ matrix.target }}
