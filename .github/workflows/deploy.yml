name: Deploy

on:
  push:
    paths:
      - 'src/**'
      - 'db/**'
      - 'package*.json'
      - 'drizzle.config.ts'
      - 'docker-compose.yml'
      - 'Dockerfile'
      - '.dockerignore'
      - '.github/workflows/deploy.yml'
      - '.github/workflows/release.yml'
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: copy files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: 'docker-compose.yml,drizzle.config.ts,db,package.json'
          target: '/pok'

      - name: Execute start sequence
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /pok
            npm update drizzle-kit
            touch .env
            echo POSTGRES_HOST=localhost >> /pok/.env
            echo POSTGRES_DB="${{ secrets.POSTGRES_DB }}" >> /pok/.env
            echo POSTGRES_USER="${{ secrets.POSTGRES_USER }}" >> /pok/.env
            echo POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" >> /pok/.env
            history -c
            history -w
            sudo docker compose stop api
            npm run db:push
            sudo docker compose up --pull always -d
