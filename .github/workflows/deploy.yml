name: Deploy

on:
  workflow_run:
    workflows: [Release]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Copy files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: 'docker-compose.yml,drizzle.config.ts,db,package.json'
          target: '/pok'

      - name: Copy constants
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: 'src/utils/constants.js'
          target: '/pok/src/utils/constants.js'

      - name: Start execution sequence
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          request_pty: true
          script: |
            cd /pok
            echo ${{ github.base_ref }} >> branch
            echo ${{ github.head_ref }} >> branch
            echo ${{ github.ref_name }} >> branch
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
            source ~/.bashrc
            nvm install 20
            npm update drizzle-kit
            echo POSTGRES_HOST=localhost > /pok/.env
            echo POSTGRES_DB="${{ secrets.POSTGRES_DB }}" >> /pok/.env
            echo POSTGRES_USER="${{ secrets.POSTGRES_USER }}" >> /pok/.env
            echo POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" >> /pok/.env
            history -c
            history -w
            sudo docker compose stop api
            npm run db:push
            sudo docker compose up --pull always -d
            sudo docker image prune -f
